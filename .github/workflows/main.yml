name: Spring Boot CI/CD with Spring Security and JWT
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest    
    steps:
    - name: actions/checkout@v3
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
        # mvn clean install # Adjust the command if you're using Gradle
        mvn clean install -Dmaven.test.skip=true
        # mvn spring-boot:run
        mkdir staging && cp .mvn/wrapper/*.jar staging

    
    - name: Archive Artifact
      uses: actions/upload-artifact@v2
      with:
          name: app-artifact
          path: staging/*.jar
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: Package
        path: staging
        retention-days: 5
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
    - name: Notify Release via Email
      uses: betterfor/action-send-mail@main
        with:
          server_address: smtp.office365.com
          server_port: 587
          username: konthamarun12@outlookcom
          password: Anusha@reddy1234
          subject: GitHub Release Notification for ${{ github.repository }}
          to: konthamarun417@gmail.com
          from: konthamarun12@outlookcom
          body: A new release has been created for ${{ github.repository }}.\n
                Release details:\n
                Tag: ${{ steps.create_release.outputs.tag_name }}\n
                Release URL: ${{ steps.create_release.outputs.html_url }}
In this step, we're using the create_release step's outputs to include the tag name and the URL of the created release in the email body. Please replace your.email@example.com with the appropriate recipient email address.

Remember to configure the GMAIL_USERNAME and GMAIL_APP_PASSWORD secrets in your repository settings and adjust other placeholders as needed. Also, ensure that you have the betterfor/action-send-mail action set up correctly in your repository or replace it with another suitable email notification solution if needed.






Regenerate

  # deploy:
  #   name: Deploy to Server
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     # Set up SSH keys or any other authentication mechanism for deployment
  #     - name: Configure SSH Key
  #       run: |
  #         echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa

  #     - name: Deploy to Server
  #       run: |
  #         ssh user@your-server-ip "cd /path/to/your/app && git pull origin main && ./mvnw spring-boot:run" # Adjust the command for your deployment process
